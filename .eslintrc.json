{
	"root": true,
	"env": {
		"es2020": true,
		"node": true,
		"commonjs": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:prettier/recommended",
		"prettier/@typescript-eslint"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": 2020,
		"sourceType": "module",
		"ecmaFeatures": {
			"impliedStrict": true
		}
	},
	"plugins": ["@typescript-eslint", "prettier"],
	"rules": {
		// Behavior Rules
		"for-direction": "error",
		"getter-return": [
			"error",
			{
				"allowImplicit": true
			}
		],
		"no-async-promise-executor": "error",
		"no-await-in-loop": "error",
		"no-compare-neg-zero": "error",
		"no-cond-assign": ["error", "always"],
		"no-console": "off",
		"no-constant-condition": [
			"error",
			{
				"checkLoops": true
			}
		],
		"no-control-regex": "error",
		"no-debugger": "error",
		"no-dupe-args": "error",
		"no-dupe-else-if": "error",
		"no-dupe-keys": "error",
		"no-duplicate-case": "error",
		"no-empty": [
			"error",
			{
				"allowEmptyCatch": true
			}
		],
		"no-empty-character-class": "error",
		"no-ex-assign": "error",
		"no-extra-boolean-cast": [
			"error",
			{
				"enforceForLogicalOperands": true
			}
		],
		"no-extra-parens": "off",
		"no-extra-semi": "error",
		"no-func-assign": "error",
		"no-import-assign": "error",
		"no-inner-declarations": ["error", "both"],
		"no-invalid-regexp": [
			"error",
			{
				"allowConstructorFlags": []
			}
		],
		"no-irregular-whitespace": [
			"error",
			{
				"skipStrings": false,
				"skipComments": false,
				"skipRegExps": false,
				"skipTemplates": false
			}
		],
		"no-misleading-character-class": "error",
		"no-obj-calls": "error",
		"no-promise-executor-return": "error",
		"no-prototype-builtins": "error",
		"no-regex-spaces": "error",
		"no-setter-return": "error",
		"no-sparse-arrays": "error",
		"no-template-curly-in-string": "error",
		"no-unexpected-multiline": "error",
		"no-unreachable": "error",
		"no-unreachable-loop": [
			"error",
			{
				"ignore": []
			}
		],
		"no-unsafe-finally": "error",
		"no-unsafe-negation": [
			"error",
			{
				"enforceForOrderingRelations": true
			}
		],
		"no-useless-backreference": "error",
		"require-atomic-updates": "error",
		"use-isnan": [
			"error",
			{
				"enforceForSwitchCase": true,
				"enforceForIndexOf": true
			}
		],
		"valid-typeof": [
			"error",
			{
				"requireStringLiterals": true
			}
		],

		// Best Practices
		"accessor-pairs": [
			"error",
			{
				"enforceForClassMembers": true,
				"getWithoutSet": true,
				"setWithoutGet": true
			}
		],
		"array-callback-return": [
			"error",
			{
				"allowImplicit": true,
				"checkForEach": true
			}
		],
		"block-scoped-var": "error",
		"class-methods-use-this": [
			"off",
			{
				"exceptMethods": []
			}
		],
		"complexity": [
			"error",
			{
				"max": 100
			}
		],
		"consistent-return": "off",
		"curly": ["error", "multi-or-nest", "consistent"],
		"default-case": [
			"error",
			{
				"commentPattern": "^skip\\sdefault"
			}
		],
		"default-case-last": "error",
		"default-param-last": "error",
		"dot-location": ["error", "property"],
		"dot-notation": "off",
		"eqeqeq": ["error", "smart"],
		// TODO: Add the rest of the https://eslint.org/docs/rules/#best-practices rules

		// Strict
		"strict": ["error", "global"],

		// TODO: Add https://eslint.org/docs/rules/#variables rules

		// Style Rules
		"array-bracket-newline": [
			"error",
			{
				"multiline": true
			}
		],
		"array-bracket-spacing": [
			"error",
			"never",
			{
				"singleValue": false,
				"arraysInArrays": false,
				"objectsInArrays": false
			}
		],
		"array-element-newline": [
			"error",
			{
				"multiline": true,
				"minItems": 3
			}
		],
		"block-spacing": ["error", "always"],
		"brace-style": [
			"error",
			"1tbs",
			{
				"allowSingleLine": true
			}
		],
		"camelcase": [
			"error",
			{
				"properties": "always",
				"ignoreDestructuring": true,
				"ignoreImports": false,
				"ignoreGlobals": true,
				"allow": []
			}
		],
		"capitalized-comments": [
			"error",
			"always",
			{
				"ignoreInlineComments": false,
				"ignoreConsecutiveComments": true
			}
		],
		"comma-dangle": [
			"error",
			"always-multiline",
			{
				"arrays": "always",
				"objects": "always",
				"imports": "always",
				"exports": "always",
				"functions": "always"
			}
		],
		"comma-spacing": [
			"error",
			{
				"before": false,
				"after": true
			}
		],
		"comma-style": ["error", "last"],
		"computed-property-spacing": ["error", "never"],
		"consistent-this": "off",
		"eol-last": ["error", "always"],

		"// TODO: Fill in blanks in style rules": "off",

		"indent": ["error", "tab"],

		"// FILL IN": "off",

		"linebreak-style": ["error", "unix"],

		"//FILL IN": "off",

		"quotes": ["error", "single"],

		"//FILL IN ": "off",

		"semi": ["error", "always"],

		// TODO: Add https://eslint.org/docs/rules/#ecmascript-6 rules

		// TODO: Fill in Typescript Rules

		// Prettier
		"prettier/prettier": "error",

		// Misc Rules
		"@typescript-eslint/no-non-null-assertion": "off"
	},
	"reportUnusedDisableDirectives": true
}
